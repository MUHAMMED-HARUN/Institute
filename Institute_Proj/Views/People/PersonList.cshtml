@model DAL.Models.TableFilters.clsPersonFilter
@{
    int i = 1;
}
<!-- رابط Bootstrap CSS (لو لم تضفه مسبقًا في Layout) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<h4 class="mb-3">clsPersonFilter</h4>
<hr />
<div class="container">

    <div class="mb-4 collection" id="filterItem">
        <div class="row g-3 align-items-center">
            <!-- بحث حسب -->
            <div class="col-12 col-md-auto d-flex align-items-center">
                <label for="searchFieldSelect" class="form-label mb-0 me-2">بحث حسب</label>
                <select id="searchFieldSelect" class="form-select w-auto">
                    <option selected value="-1">لا شيئ</option>
                    <option data-pattern="^\d{1,10}$"  value="PersonID">المعرف الشخصي</option>
                    <option data-pattern="^\d{11}$" value="NationalNumber">الرقم الوطني</option>
                    <option data-pattern="^[\u0600-\u06FFa-zA-Z ]{2,50}$" value="FirstName">الاسم الاول</option>
                </select>

                <input type="text" id="searchInput" name="" class="form-control ms-2" style="min-width: 200px;" disabled placeholder="" />
            </div>

            <!-- تصنيف حسب الجنس -->
            <div class="col-12 col-md-auto d-flex align-items-center">
                <p class="mb-0 me-3">تصنيف حسب الجنس</p>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" id="None" type="radio" name="Gendor" value="" />
                    <label class="form-check-label" for="None">لا شيئ</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" id="male" type="radio" name="Gendor" value="true" />
                    <label class="form-check-label" for="male">ذكر</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" id="fmale" type="radio" name="Gendor" value="false" />
                    <label class="form-check-label" for="fmale">انثى</label>
                </div>
            </div>

            <!-- من وإلى تاريخ -->
            <div class="col-12 col-md-auto d-flex align-items-center">
                <label for="minDate" class="col-form-label mb-0 me-2">من تاريخ</label>
                <input id="minDate" type="date" name="MinDate" class="form-control me-3" />

                <label for="maxDate" class="col-form-label mb-0 me-2">إلى تاريخ</label>
                <input id="maxDate" type="date" name="MaxDate" class="form-control" />
            </div>
            <div>
                اضف هنا address filters
            </div>
            <!-- زر البحث -->
            <div class="col-12 col-md-auto d-flex align-items-center">
                <button type="button" id="btnSearch" class="btn btn-primary">بحث</button>
                <button type="button" id="btnReset" class="btn btn-primary">ارجاع</button>
            </div>
        </div>
    </div>

    <div>
        <a asp-action="NewOrEdit" asp-controller="People"><i class="fa-solid fa-user-plus"></i></a>
    </div>

    <div>
        <table class="table table-hover table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>المعرف الشخصي</th>
                    <th>المعرف الوطني</th>
                    <th>الاسم الكامل</th>
                    <th>رقم التواصل</th>
                    <th>الجنس</th>
                    <th>تاريخ الولادة</th>
                </tr>
            </thead>
            <tbody id="resultTableBody">

                @foreach (var peron in Model.personTableView)
                {
                    <tr class=`row-info{@i}`>
                        <td>@peron.PersonID</td>
                        <td>@peron.NationalNumber</td>
                        <td>@peron.FullName</td>
                        <td>@peron.PhoneNumber</td>
                        <td>@peron.GendorText</td>
                        <td>@peron.BirthDate.ToString("yyyy-MM-dd")</td>
                        <td><a asp-action="NewOrEdit" asp-controller="People" asp-route-personID="@peron.PersonID"><i class="fa-solid fa-user-pen"></i></a></td>
                        <td data-id-Info="@peron.PersonID" data-tr-class-info="@($"row-info{i}")" class="showPersonCard"><i class="fa-solid fa-address-card"></i></td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>

</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<!-- jQuery و Bootstrap JS (اختياري للـ components التفاعلية) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        // تغيير اسم وحقل الإدخال حسب اختيار المستخدم
        $("#searchFieldSelect").on("change", function () {
            const selectedValue = $(this).val();
            const input = $("#searchInput");
            if (selectedValue === "-1") {
                input.attr("name", "");
                input.value = "";
                input.attr("placeholder", "");
                input.prop("disabled", true);
            } else {
                input.attr("name", selectedValue);
                input.prop("disabled", false);
                input.attr("placeholder", "أدخل " + $(this).find("option:selected").text());
            }
        });

        // عند الضغط على زر البحث
        $("#btnSearch").on("click", function () {
            let input = $("#searchInput");
            let fieldName = input.attr("name");
            let fieldValue = input.val();

            if (! CheckIsValid(fieldValue)){
                return;
            }
           

            let dataToSend = {
                gendor: $('input[name="Gendor"]:checked').val(),
                minDate: $('input[name="MinDate"]').val(),
                maxDate: $('input[name="MaxDate"]').val()
            };

            if (fieldName && fieldName !== "-1") {
                dataToSend[fieldName] = fieldValue;
            }

            $.ajax({
                url: '/People/Search',
                type: 'GET',
                data: dataToSend,
                success: function (data) {
                    $('#resultTableBody').html('');
                    data.forEach(function (d) {
                        const tr = `<tr>
                                <td>${d.personID}</td>
                                <td>${d.nationalNumber}</td>
                                <td>${d.fullName}</td>
                                <td>${d.phoneNumber}</td>
                                <td>${d.gendorText}</td>
                                <td>${d.birthDate}</td>
                            </tr>`;
                        $('#resultTableBody').append(tr);
                    });
                },
                error: function (xhr, status, error) {
                    alert("حدث خطأ أثناء البحث: " + error);
                }
            });

        });
        $("#btnReset").on("click", function () {
            $("#filterItem").find("input").val("");
            $("#filterItem").find(`input[type="radio"]`).prop('checked',false);
            document.getElementById("errorelement")?.remove();
        });

        $("#searchInput").on("change", function () {
            const selectedOption = $("#searchFieldSelect").find("option:selected");
            const pattern = new RegExp(selectedOption.data("pattern"));

            CheckIsValid( $(this).val())
        });

        function CheckIsValid(fildValue){

            const selectedOption = $("#searchFieldSelect").find("option:selected");
            const pattern = new RegExp(selectedOption.data("pattern"));

            document.getElementById("errorelement")?.remove();

            if (!pattern.test(fildValue)) {

                const newElement = document.createElement("p");
                newElement.innerHTML = 'القيمة غير صالحة';
                newElement.className = "text-danger";
                newElement.id = 'errorelement';

                // لاحظ أن getElementById لا يحتاج علامة #
                const referenceElement = document.getElementById("searchInput");
                referenceElement.insertAdjacentElement("afterend", newElement);
                return false;
            }
            return true;
        }



        $(document).on("click", ".showPersonCard", function () {
            const personID = $(this).data("idInfo");
            const trClass = $(this).data("trClassInfo");
            const trElement = $(`[data-tr-class-info="${trClass}"]`).first();

            $("#PersonCardPartial").remove();

            $.ajax({
                url: '/People/ShowPersonCard',
                type: 'GET',
                data: { PersonID: personID },
                success: function (partialHtml) {
                    const newElement = NewHtmlElement("div", partialHtml, "PersonCardPartial");
                    if (trElement.length) {
                        trElement.after(newElement);
                    } else {
                        console.warn("trElement not found for trClass:", trClass);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error:", error);
                }
            });
        });


        function NewHtmlElement(ElementTag,ElementInnerHtml,Elementid){
            Element = document.createElement("div");
            Element.innerHTML = ElementInnerHtml;
            Element.id = Elementid;
            return Element;
        }
    });
</script>
